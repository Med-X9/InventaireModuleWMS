# Generated by Django 5.2 on 2025-07-16 18:51

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code du compte')),
                ('account_name', models.CharField(max_length=100, verbose_name='Nom du compte')),
                ('account_statuts', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('OBSOLETE', 'Obsolète')], verbose_name='Statut')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Compte',
                'verbose_name_plural': 'Comptes',
            },
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': "Type d'emplacement",
                'verbose_name_plural': "Types d'emplacements",
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SousZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code de la sous-zone')),
                ('sous_zone_name', models.CharField(max_length=100, verbose_name='Nom de la sous-zone')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('sous_zone_status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('BLOCKED', 'Bloqué')], verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Sous-zone',
                'verbose_name_plural': 'Sous-zones',
            },
        ),
        migrations.CreateModel(
            name='TypeRessource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Unité de mesure',
                'verbose_name_plural': 'Unités de mesure',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name="Code de l'entrepôt")),
                ('warehouse_name', models.CharField(max_length=100, verbose_name="Nom de l'entrepôt")),
                ('warehouse_type', models.CharField(choices=[('CENTRAL', 'Central'), ('RECEIVING', 'Réception'), ('SHIPPING', 'Expédition'), ('TRANSIT', 'Transit')], verbose_name="Type d'entrepôt")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif')], verbose_name='Statut')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
            ],
            options={
                'verbose_name': 'Entrepôt',
                'verbose_name_plural': 'Entrepôts',
            },
        ),
        migrations.CreateModel(
            name='ZoneType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code du type')),
                ('type_name', models.CharField(max_length=100, verbose_name='Nom du type')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif')], verbose_name='Statut')),
            ],
            options={
                'verbose_name': 'Type de zone',
                'verbose_name_plural': 'Types de zones',
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code de la famille')),
                ('family_name', models.CharField(max_length=100, verbose_name='Nom de la famille')),
                ('family_description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('family_status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('OBSOLETE', 'Obsolète')], max_length=10, verbose_name='Statut')),
                ('compte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.account', verbose_name='Compte')),
            ],
            options={
                'verbose_name': 'Famille',
                'verbose_name_plural': 'Familles',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAccount',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code du compte')),
                ('account_name', models.CharField(max_length=100, verbose_name='Nom du compte')),
                ('account_statuts', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('OBSOLETE', 'Obsolète')], verbose_name='Statut')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Compte',
                'verbose_name_plural': 'historical Comptes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFamily',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code de la famille')),
                ('family_name', models.CharField(max_length=100, verbose_name='Nom de la famille')),
                ('family_description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('family_status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('OBSOLETE', 'Obsolète')], max_length=10, verbose_name='Statut')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('compte', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.account', verbose_name='Compte')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Famille',
                'verbose_name_plural': 'historical Familles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "historical Type d'emplacement",
                'verbose_name_plural': "historical Types d'emplacements",
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTypeRessource',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical type ressource',
                'verbose_name_plural': 'historical type ressources',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUnitOfMeasure',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code')),
                ('name', models.CharField(max_length=50, verbose_name='Nom')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Unité de mesure',
                'verbose_name_plural': 'historical Unités de mesure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWarehouse',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name="Code de l'entrepôt")),
                ('warehouse_name', models.CharField(max_length=100, verbose_name="Nom de l'entrepôt")),
                ('warehouse_type', models.CharField(choices=[('CENTRAL', 'Central'), ('RECEIVING', 'Réception'), ('SHIPPING', 'Expédition'), ('TRANSIT', 'Transit')], verbose_name="Type d'entrepôt")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif')], verbose_name='Statut')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Adresse')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Entrepôt',
                'verbose_name_plural': 'historical Entrepôts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalZoneType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code du type')),
                ('type_name', models.CharField(max_length=100, verbose_name='Nom du type')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif')], verbose_name='Statut')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Type de zone',
                'verbose_name_plural': 'historical Types de zones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name="Code de l'emplacement")),
                ('location_reference', models.CharField(max_length=30, unique=True, verbose_name="Référence de l'emplacement")),
                ('capacity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Capacité')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('location_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.locationtype', verbose_name="Type d'emplacement")),
                ('sous_zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.souszone', verbose_name='Sous-zone')),
            ],
            options={
                'verbose_name': 'Emplacement',
                'verbose_name_plural': 'Emplacements',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Référence')),
                ('Internal_Product_Code', models.CharField(max_length=20, unique=True, verbose_name='Code produit')),
                ('Short_Description', models.CharField(max_length=100, verbose_name='Désignation')),
                ('Barcode', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Code-barres')),
                ('Product_Group', models.CharField(blank=True, max_length=10, null=True, verbose_name='Groupe de produit')),
                ('Stock_Unit', models.CharField(max_length=30, verbose_name='Unité de stock')),
                ('Product_Status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('OBSOLETE', 'Obsolète')], verbose_name='Statut')),
                ('Is_Variant', models.BooleanField(default=False, verbose_name='variante')),
                ('n_lot', models.BooleanField(default=False, verbose_name='N° lot')),
                ('n_serie', models.BooleanField(default=False, verbose_name='N° série')),
                ('dlc', models.BooleanField(default=False, verbose_name='DLC')),
                ('Product_Family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.family', verbose_name='Famille de produit')),
                ('parent_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='masterdata.product', verbose_name='Produit parent')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Référence')),
                ('Internal_Product_Code', models.CharField(db_index=True, max_length=20, verbose_name='Code produit')),
                ('Short_Description', models.CharField(max_length=100, verbose_name='Désignation')),
                ('Barcode', models.CharField(blank=True, db_index=True, max_length=30, null=True, verbose_name='Code-barres')),
                ('Product_Group', models.CharField(blank=True, max_length=10, null=True, verbose_name='Groupe de produit')),
                ('Stock_Unit', models.CharField(max_length=30, verbose_name='Unité de stock')),
                ('Product_Status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('OBSOLETE', 'Obsolète')], verbose_name='Statut')),
                ('Is_Variant', models.BooleanField(default=False, verbose_name='variante')),
                ('n_lot', models.BooleanField(default=False, verbose_name='N° lot')),
                ('n_serie', models.BooleanField(default=False, verbose_name='N° série')),
                ('dlc', models.BooleanField(default=False, verbose_name='DLC')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('Product_Family', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.family', verbose_name='Famille de produit')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent_product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.product', verbose_name='Produit parent')),
            ],
            options={
                'verbose_name': 'historical Produit',
                'verbose_name_plural': 'historical Produits',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name="Code de l'emplacement")),
                ('location_reference', models.CharField(db_index=True, max_length=30, verbose_name="Référence de l'emplacement")),
                ('capacity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Capacité')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.locationtype', verbose_name="Type d'emplacement")),
                ('sous_zone', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.souszone', verbose_name='Sous-zone')),
            ],
            options={
                'verbose_name': 'historical Emplacement',
                'verbose_name_plural': 'historical Emplacements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Ressource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')])),
                ('type_ressource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.typeressource', verbose_name='Type de ressource')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalRessource',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20)),
                ('libelle', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('type_ressource', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.typeressource', verbose_name='Type de ressource')),
            ],
            options={
                'verbose_name': 'historical ressource',
                'verbose_name_plural': 'historical ressources',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('quantity_available', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_reserved', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_in_transit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_in_receiving', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.inventory')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.location')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='masterdata.product')),
                ('unit_of_measure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.unitofmeasure')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalStock',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20)),
                ('quantity_available', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_reserved', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_in_transit', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('quantity_in_receiving', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('inventory', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.inventory')),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.location')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.product')),
                ('unit_of_measure', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.unitofmeasure')),
            ],
            options={
                'verbose_name': 'historical stock',
                'verbose_name_plural': 'historical stocks',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=20, unique=True, verbose_name='Code de la zone')),
                ('zone_name', models.CharField(max_length=100, verbose_name='Nom de la zone')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('zone_status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('BLOCKED', 'Bloqué')], verbose_name='Statut')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.warehouse', verbose_name='Entrepôt')),
                ('zone_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.zonetype', verbose_name='Type de zone')),
            ],
            options={
                'verbose_name': 'Zone',
                'verbose_name_plural': 'Zones',
            },
        ),
        migrations.AddField(
            model_name='souszone',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masterdata.zone', verbose_name='Zone'),
        ),
        migrations.CreateModel(
            name='HistoricalSousZone',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code de la sous-zone')),
                ('sous_zone_name', models.CharField(max_length=100, verbose_name='Nom de la sous-zone')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('sous_zone_status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('BLOCKED', 'Bloqué')], verbose_name='Statut')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('zone', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.zone', verbose_name='Zone')),
            ],
            options={
                'verbose_name': 'historical Sous-zone',
                'verbose_name_plural': 'historical Sous-zones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalZone',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('reference', models.CharField(db_index=True, max_length=20, verbose_name='Code de la zone')),
                ('zone_name', models.CharField(max_length=100, verbose_name='Nom de la zone')),
                ('description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Description')),
                ('zone_status', models.CharField(choices=[('ACTIVE', 'Actif'), ('INACTIVE', 'Inactif'), ('BLOCKED', 'Bloqué')], verbose_name='Statut')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.warehouse', verbose_name='Entrepôt')),
                ('zone_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='masterdata.zonetype', verbose_name='Type de zone')),
            ],
            options={
                'verbose_name': 'historical Zone',
                'verbose_name_plural': 'historical Zones',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
